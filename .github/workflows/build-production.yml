name: Build Production App

on:
  push:
    branches: [ main, production ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: 📱 Checkout code
      uses: actions/checkout@v4
      
    - name: 🟢 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: 📦 Install dependencies
      run: npm ci
      
    - name: 🔧 Setup Expo CLI
      run: npm install -g @expo/cli
      
    - name: 🔐 Inject production secrets
      run: |
        echo "EXPO_PUBLIC_ENV=production" >> .env
        echo "EXPO_PUBLIC_FIREBASE_API_KEY=${{ secrets.FIREBASE_API_KEY }}" >> .env
        echo "EXPO_PUBLIC_FIREBASE_AUTH_DOMAIN=${{ secrets.FIREBASE_AUTH_DOMAIN }}" >> .env
        echo "EXPO_PUBLIC_FIREBASE_PROJECT_ID=${{ secrets.FIREBASE_PROJECT_ID }}" >> .env
        echo "EXPO_PUBLIC_FIREBASE_STORAGE_BUCKET=${{ secrets.FIREBASE_STORAGE_BUCKET }}" >> .env
        echo "EXPO_PUBLIC_FIREBASE_MESSAGING_SENDER_ID=${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}" >> .env
        echo "EXPO_PUBLIC_FIREBASE_APP_ID=${{ secrets.FIREBASE_APP_ID }}" >> .env
        echo "EXPO_PUBLIC_GCP_PROJECT_ID=${{ secrets.GCP_PROJECT_ID }}" >> .env
        echo "EXPO_PUBLIC_GCP_REGION=${{ secrets.GCP_REGION }}" >> .env
        echo "EXPO_PUBLIC_GITHUB_CLIENT_ID=${{ secrets.GITHUB_CLIENT_ID }}" >> .env
        echo "EXPO_PUBLIC_API_URL=${{ secrets.API_URL }}" >> .env
        echo "EXPO_PUBLIC_WS_URL=${{ secrets.WS_URL }}" >> .env
        
    - name: 🏗️ Build for production
      run: |
        expo build:android --type apk --no-wait
        # expo build:ios --type archive --no-wait  # Per iOS
        
    - name: 🧹 Clean up secrets
      run: rm -f .env
      
    - name: 📤 Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: production-build
        path: |
          *.apk
          *.ipa
